package com.lti.dao;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.TypedQuery;
import javax.transaction.Transactional;

import org.springframework.stereotype.Repository;

import com.lti.model.BusDetails;
import com.lti.model.BusSearch;
import com.lti.model.Credentials;

import antlr.collections.List;

@Repository("busSearchDao")
public class BusSearchDaoImpl implements BusSearchDao {
	
	@PersistenceContext
	private EntityManager entityManager;
	
	@Transactional
	@Override
	public BusDetails busSearch(BusSearch busSearch) {
		TypedQuery<BusSearch> query=entityManager.createQuery("select b From Bus_details b where b.bus_source=:source, b.bus_destination=:destination, b.bus_date=:date, b.seats_available > :travellers", BusSearch.class);
		 
		 query.setParameter("source", busSearch.getSource());
		 query.setParameter("destination", busSearch.getDestination());
		 query.setParameter("date", busSearch.getDate());
		 query.setParameter("travellers", busSearch.getNoOfPassengers());
		 
		 List<BusSearch> bs = query.getResultList();
		
		 
		 String source=bs.getSource();
		 String destination =bs.getDestination();
		 String date = bs.getDate();
		 int travellers = bs.getNoOfPassengers();
		 
		 if(source.equals(busSearch.getSource()) && destination.equals(busSearch.getDestination()) && date.equals(busSearch.getDate()) && travellers < busSearch.getNoOfPassengers())
		 return null;
	}

}
