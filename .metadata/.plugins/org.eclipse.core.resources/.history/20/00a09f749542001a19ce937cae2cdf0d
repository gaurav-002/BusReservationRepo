package com.lti.dao;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;
import javax.persistence.TypedQuery;

import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.lti.model.BookingDetails;
import com.lti.model.BusDetails;

@Repository("bookingDao")
public class BookingDetailsDaoImpl implements BookingDetailsDao {

	@PersistenceContext
	private EntityManager entityManager;
	
	@Override
	@Transactional
	public int bookBus(BookingDetails bookBus) {
		String sql = "select booking_detail_booking_id.nextval from dual";
		Query query =  entityManager.createNativeQuery(sql,BookingDetails.class);
		String sql1 = "insert into booking_details(booking_id,passenger_id,passenger_age,passenger_name,passenger_gender,bus_id,bus_fare,bus_name,bus_source,bus_destination,bus_departure_time,bus_departure_date,booking_date,no_of_seats)"
						+ "values(booking_detail_booking_id.currval,:pId,:pAge,:pName,:pGender,:bId,:bFare,:bName,:bSource,:bDestination,:bTime,:bDate,:bookDate,:seats)";
		Query query1 =  entityManager.createNativeQuery(sql1,BookingDetails.class);
		
		query1.setParameter("pId", bookBus.getPassengerId());
		query1.setParameter("pAge", bookBus.getPassengerAge());
		query1.setParameter("pName", bookBus.getPassengerName());
		query1.setParameter("pGender", bookBus.getPassengerGender());
		query1.setParameter("bId", bookBus.getBusId());
		query1.setParameter("bFare", bookBus.getBusFare());
		query1.setParameter("bName", bookBus.getBusName());
		query1.setParameter("bSource", bookBus.getBusSource());
		query1.setParameter("bDestination", bookBus.getBusDestination());
		query1.setParameter("bTime", bookBus.getBusDepartureTime());
		query1.setParameter("bDate", bookBus.getBusDepartureDate());
		query1.setParameter("bookDate", bookBus.getBookingDate());		
		query1.setParameter("seats", bookBus.getNoOfSeats());
		int rs = query1.executeUpdate();		
		
		
		String sql2 = "From BusDetails where busId=:bId";		
		TypedQuery<BusDetails> query2 = entityManager.createQuery(sql2, BusDetails.class);
		query2.setParameter("bId", bookBus.getBusId());
		BusDetails busd = query2.getSingleResult();
		
//		String sql3="From BookingDetails where bookingId = :bookId";
//		TypedQuery<BookingDetails> query3 = entityManager.createQuery(sql3, BookingDetails.class);
//		query3.setParameter("bookId", bookBus.getBookingId());
//		BookingDetails bookd = query3.getSingleResult();
		
//		System.out.println(bookd);
		
		int availableSeats = ((busd.getSeatsAvailable())-bookBus.getNoOfSeats());
		
		String sql4="UPDATE bus_details set SEATS_AVAILABLE=:seats where bus_id=:bId";
		Query query4 =  entityManager.createNativeQuery(sql4,BusDetails.class);
		query4.setParameter("seats", availableSeats);
		query4.setParameter("bId", busd.getBusId());
		query4.executeUpdate();		

		return rs;
	}
	

}
//booking_id number(5) primary key,
//passenger_id number(5),	 
//passenger_age number(3),
//passenger_name varchar(20),
//passenger_gender varchar(10),
//bus_id number(5),	 
//bus_fare number(5),	 
//bus_name varchar(15),
//bus_source varchar(15),
//bus_destination varchar(15),
//bus_departure_time varchar(8) not null,
//bus_departure_date varchar(15),
//booking_date varchar(20)




//insert into Booking_details(BOOKING_ID,PASSENGER_ID,PASSENGER_AGE,PASSENGER_NAME,PASSENGER_GENDER,BUS_ID,BUS_FARE,BUS_NAME,BUS_SOURCE,BUS_DESTINATION,BUS_DEPARTURE_TIME,BUS_DEPARTURE_DATE,BOOKING_DATE)values(booking_detail_booking_id.nextval,124,25,'Akshay',:pGender,:bId,:bFare,:bName,:bSource,:bDestination,:bTime,:bDate,:bookDAte)

